<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	   http://www.springframework.org/schema/tx 
	   http://www.springframework.org/schema/tx/spring-tx-3.1.xsd   
	   http://www.springframework.org/schema/context 
	   http://www.springframework.org/schema/context/spring-context-3.1.xsd   
	   http://www.springframework.org/schema/jee 
	   http://www.springframework.org/schema/jee/spring-jee-3.1.xsd	   
	   http://www.springframework.org/schema/lang
	   http://www.springframework.org/schema/lang/spring-lang-3.1.xsd
	   http://www.springframework.org/schema/security 
	   http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- ******************************************************************** -->
    <!-- Scan for dao layer annotated beans -->
    <!-- ******************************************************************** -->
    <context:component-scan base-package="net.zjcclims.dao" scoped-proxy="interfaces"/>
    <!-- ******************************************************************** -->
    <!-- Mark bean transactions as annotation driven -->
    <!-- ******************************************************************** -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- ******************************************************************** -->
    <!-- Setup the transaction manager -->
    <!-- ******************************************************************** -->
    <!-- Using Atomikos Transaction Manager -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init"
          destroy-method="close">
        <property name="forceShutdown" value="true"/>
        <property name="startupTransactionService" value="true"/>
        <property name="transactionTimeout" value="200"/>
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"/>

    <!-- Configure the Spring framework to use JTA transactions from Atomikos -->
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
        <property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION"/>
    </bean>

    <!-- ******************************************************************** -->
    <!-- Setup a data source -->
    <!-- ******************************************************************** -->


    <!-- Using Apache DBCP Data Sources -->
    <bean id="limsproduct" name="zjcclimsConnDS,springSecurityDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close" primary="true">
        <!--这里多数据源,springBoot启动时需要指定一个默认的数据源，所以需要加primary="true",否则会出现数据源bean匹配失败错误-->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/limsproduct"/>
        <property name="username" value="root"/>
        <property name="password" value="gengshang"/>
    </bean>

    <bean id="zjcclims" name="zjcclims" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/zjcclims"/>
        <property name="username" value="root"/>
        <property name="password" value="gengshang"/>
    </bean>
    <!--
    <bean id="zjcclims" name="limsproductnew" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/zjcclims"/>
       <property name="username" value="root"/>
        <property name="password" value="gengshang"/>
   </bean>-->

    <!--动态选择数据源-->
    <bean id="changeDataSource" class="net.zjcclims.web.aop.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="limsproduct" value-ref="limsproduct"/>
                <entry key="zjcclims" value-ref="zjcclims"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="limsproduct"/>
        <!--不可少-->
    </bean>

    <!-- ******************************************************************** -->
    <!-- Setup each persistence unit -->
    <!-- ******************************************************************** -->


    <!-- Configure a JPA vendor adapter -->
    <bean id="zjcclimsConnJPAVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="true"/>
        <property name="generateDdl" value="true"/>
        <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect"/>
    </bean>
    <!-- EntityManager Factory that brings together the persistence unit, datasource, and JPA Vendor -->
    <bean id="zjcclimsConn" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="changeDataSource"/>
        <property name="persistenceUnitName" value="zjcclimsConn"/>
        <property name="jpaVendorAdapter" ref="zjcclimsConnJPAVendorAdapter"/>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.transaction.manager_lookup_class"
                       value="com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup"/>
                <entry key="hibernate.connection.release_mode" value="on_close"/>
            </map>
        </property>
    </bean>


    <!-- ******************************************************************** -->
    <!-- Setup each persistence unit -->
    <!-- ******************************************************************** -->


</beans>
